
application {
  config {
    baseName dronedelivery,
    applicationType monolith,
    packageName br.com.dronedelivery,
    authenticationType jwt,
    prodDatabaseType mysql,
    clientFramework react
  }
  entities *
}

entity Empresa {
	id UUID,
    razaoSocial String required,
    nomeFantasia String,
    documento Integer required unique min(14) max(14),
    email String,
    tipoEmpresa TipoEmpresa,
    status Boolean,
    criadoEm Instant,
    atualizadoEm Instant
}

entity Cliente {
	id UUID,
    nome String required,
    documento Integer required unique min(11) max(11),
    email String,
    status Boolean,
    criadoEm Instant,
    atualizadoEm Instant
}

entity Drone {
	id UUID,
    codigo String required unique,
    nome String required,
    descricao String,
    statusDrone StatusDrone,
    criadoEm Instant,
    atualizadoEm Instant
}

entity Endereco {
	id UUID,
	rua String required,
    numero Integer required,
    bairro String required,
    cidade String required,
    estado String required,
    cep String required,
    complemento String,
    referencia String,
    enderecoCompleto String,
    tipoEndereco TipoEndereco,
    latitude Double,
    longitude Double,
    status Boolean,
    criadoEm Instant,
    atualizadoEm Instant
}

entity Telefone {
	id UUID,
    ddd Integer required max(2),
    numero Long required max(9)
    tipoTelefone TipoTelefone,
    status Boolean,
    criadoEm Instant,
    atualizadoEm Instant
}

entity Pedido {
	id UUID,
    codigo Long required unique,
    notaFiscal Long required,
    statusPedido StatusPedido,
    criadoEm Instant,
    atualizadoEm Instant
}



entity Agendamento {
	id UUID,
    dataAgendada Instant,
    statusAgendamento StatusAgendamento,
    criadoEm Instant,
    atualizadoEm Instant
}

enum TipoEndereco {
	RESIDENCIAL (Residencial),
    COMERCIAL (Comercial)
}

enum TipoEmpresa {
	COMERCIO (Comercio),
    INDUSTRIA (Industria)
}

enum TipoTelefone {
	FIXO (Fixo),
	CELULAR (Celular)
}

enum StatusPedido {
	ABERTO,
    TRANSITO_COLETA,
    COLETADO,
    TRANSITO_ENTREGA,
    ENTREGUE,
    TRANSITO_RETORNO,
    CONCLUIDO
}

enum StatusAgendamento {
	AGENDADO,
    CONCLUIDO
}

enum StatusDrone {
	LIBERADO,
    MANUTENCAO,
    AGENDADO,
    EXECUTANTO_AGENDAMENTO
    
}

relationship OneToMany {
 	Empresa{razaoSocial} to Endereco,
    Empresa{razaoSocial} to Telefone,
    Cliente{nome} to Endereco,
    Cliente{nome} to Telefone,
    Drone{codigo} to Agendamento,
    Pedido{codigo} to Agendamento,
    Cliente{nome} to Pedido,
    Empresa{razaoSocial} to Pedido,
    Endereco{enderecoCompleto} to Pedido
}

paginate * with pagination

dto * with mapstruct

service * with serviceImpl
    